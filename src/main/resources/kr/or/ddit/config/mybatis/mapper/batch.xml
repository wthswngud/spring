<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="batch">
	<select id="getCycleList" resultType="cycleVO">
		select	*
		from	cycle
	</select>
	
	<insert id="mergeDaily" parameterType="dailyVO">
		merge into daily
			using dual on(
				daily.pid = #{pid} and
				daily.cid = #{cid} and
				daily.dt = #{dt}
			)
			when matched then update set
				cnt = #{cnt}
			when not matched then insert
				(pid, cid, dt, cnt)
				values (#{pid}, #{cid}, #{dt}, #{cnt})
	</insert>
	
	
	<delete id="deleteDaily" parameterType="String">
		delete	daily
		where	dt like #{ym} || '%'	
	</delete>
	
	
	<insert id="createDaily" parameterType="String">
		insert into daily
		select  cycle.cid, cycle.pid, cal.dt, cycle.cnt
		from    cycle, 
			(select to_char(to_date(#{ym}, 'yyyyMM') + (level - 1), 'yyyyMMdd') dt,
			        to_char(to_date(#{ym}, 'yyyyMM') + (level - 1), 'd') day
			from    dual
			connect by level &lt;= last_day(to_date(#{ym}, 'yyyyMM')) - to_date(#{ym}, 'yyyyMM') +1) cal
		where   cycle.day = cal.day
		order by cycle.cid, cycle.pid, cal.dt
	</insert>
	
	<insert id="insertBatch" parameterType="batchVO">
		<selectKey keyColumn="bid" keyProperty="bid" resultType="int" order="BEFORE">
			select	seq_batch.nextval bid from dual
		</selectKey>
		insert into batch values(#{bid}, #{bcd}, #{st}, sysdate, null)
	</insert>
	
	<update id="updateBatch" parameterType="batchVO">
		update batch set st = #{st},
					 ed_dt = sysdate
		where bid = #{bid}
	</update>
</mapper>